{
  "name": "Daily Tech & AI News Topic Tracker",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 8,
              "triggerAtMinute": 1
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -6140,
        240
      ],
      "id": "aab59e11-34fd-4cf1-95d5-4522051ffe63",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "app42MWoBdW4bj8Ba",
          "mode": "list",
          "cachedResultName": "News Pipeline Base",
          "cachedResultUrl": "https://airtable.com/app42MWoBdW4bj8Ba"
        },
        "table": {
          "__rl": true,
          "value": "tbl0UGDeOm5zulwqA",
          "mode": "list",
          "cachedResultName": "Topics to Monitor",
          "cachedResultUrl": "https://airtable.com/app42MWoBdW4bj8Ba/tbl0UGDeOm5zulwqA"
        },
        "returnAll": "={{ true }}",
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        -5480,
        -480
      ],
      "id": "e0b43ebb-0113-4cd0-80a7-e793d7da894a",
      "name": "Airtable_Topics",
      "credentials": {
        "airtableTokenApi": {
          "id": "xkPz2bkNdniT6QGt",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://techcrunch.com/feed/",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -5480,
        -280
      ],
      "id": "b4e9a126-5f5c-408d-b70f-77c787c9c19f",
      "name": "TechCrunch_RSS"
    },
    {
      "parameters": {
        "url": "https://www.theverge.com/rss/index.xml",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -5480,
        -80
      ],
      "id": "31436e94-4645-4132-a205-4ad16656c6a8",
      "name": "TheVerge_RSS"
    },
    {
      "parameters": {
        "url": "https://feeds.arstechnica.com/arstechnica/index",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -5480,
        120
      ],
      "id": "bf2563d9-9c26-4a5e-8b13-f9905760e4d7",
      "name": "ArsTechnica_RSS"
    },
    {
      "parameters": {
        "url": "https://venturebeat.com/feed/",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -5480,
        320
      ],
      "id": "d1206d0c-7e8a-41f8-8e2e-777d2440cbf5",
      "name": "VentureBeat_RSS"
    },
    {
      "parameters": {
        "url": "https://openai.com/blog/rss.xml",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -5480,
        520
      ],
      "id": "554f553e-ee1c-491c-87fe-86f776ad5833",
      "name": "OpenAI_RSS"
    },
    {
      "parameters": {
        "url": "https://ai.googleblog.com/feeds/posts/default",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -5480,
        720
      ],
      "id": "f2ba6fa2-1bde-4575-b47d-926a144cce82",
      "name": "GoogleAI_RSS"
    },
    {
      "parameters": {
        "url": "https://www.anthropic.com/rss.xml",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -5480,
        920
      ],
      "id": "77cf4eaf-4d2c-474b-aaa4-b4b40f38597a",
      "name": "Anthropic_RSS"
    },
    {
      "parameters": {
        "url": "https://huggingface.co/blog/feed.xml",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -5480,
        1120
      ],
      "id": "new-hf-node-id",
      "name": "HuggingFace_RSS"
    },
    {
      "parameters": {
        "url": "https://hnrss.org/frontpage",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -5480,
        1320
      ],
      "id": "new-hn-node-id",
      "name": "HackerNews_RSS"
    },
    {
      "parameters": {
        "url": "https://www.technologyreview.com/feed/",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -5480,
        1520
      ],
      "id": "new-mit-node-id",
      "name": "MITTechReview_RSS"
    },
    {
      "parameters": {
        "url": "https://feeds.bloomberg.com/technology/news.rss",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -5480,
        1720
      ],
      "id": "new-bloomberg-node-id",
      "name": "BloombergTech_RSS"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        -5260,
        220
      ],
      "id": "f25b15d2-b498-4c0f-8ece-894aef5122a7",
      "name": "Merge Articles"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Analyze this news article for relevance to these monitored topics: {{$json.monitored_topics}}\n\nThe article specifically matched these topic keywords: {{$json.matched_topics}}\n\n**Article Details:**\n- Title: {{$json.title}}\n- Description: {{$json.description}} \n- Source: {{$json.source}}\n- URL: {{$json.url}}\n- Published Date: {{$json.published_date}}\n\n**Analysis Requirements:**\n\n1. **Summary**: Write a concise 2-3 sentence summary (max 100 words) focusing on the key development, innovation, or trend described.\n\n2. **Topic Tags**: Assign 2-4 specific topic tags from this list based on the article content:\n   - \"artificial intelligence\"\n   - \"machine learning\" \n   - \"large language models\"\n   - \"generative AI\"\n   - \"computer vision\"\n   - \"natural language processing\"\n   - \"robotics\"\n   - \"autonomous vehicles\"\n   - \"blockchain\"\n   - \"cryptocurrency\"\n   - \"cloud computing\"\n   - \"cybersecurity\"\n   - \"software development\"\n   - \"mobile technology\"\n   - \"web development\"\n   - \"data science\"\n   - \"fintech\"\n   - \"startup funding\"\n   - \"IPO announcements\"\n   - \"tech acquisitions\"\n   - \"product launches\"\n   - \"partnerships\"\n   - \"research breakthroughs\"\n   - \"industry analysis\"\n   - \"market trends\"\n   - \"regulatory news\"\n   - \"privacy concerns\"\n   - \"open source\"\n   - \"developer tools\"\n   - \"quantum computing\"\n   - \"edge computing\"\n   - \"IoT devices\"\n   - \"5G technology\"\n   - \"semiconductor industry\"\n   - \"tech stocks\"\n   - \"venture capital\"\n\n3. **Development Status**: Choose the most appropriate status:\n   - \"announced\" - New product/feature/initiative announced\n   - \"launched\" - Product or service officially released\n   - \"in development\" - Active development or testing phase\n   - \"acquired\" - Company/technology acquisition\n   - \"funded\" - Investment or funding round completed\n   - \"partnership\" - Strategic partnership or collaboration\n   - \"research\" - Academic or corporate research findings\n   - \"regulatory\" - Government or industry regulation\n   - \"market analysis\" - Industry trends or market reports\n   - \"unknown\" - Status unclear from article\n\n4. **Significance Level**: Rate the importance (1-5 scale):\n   - 5: Major breakthrough or industry-changing development\n   - 4: Significant advancement or large company move\n   - 3: Notable development or medium impact\n   - 2: Minor update or incremental progress\n   - 1: Routine announcement or maintenance update\n\n**Response Format (JSON only):**\n```json\n{\n  \"summary\": \"Your 2-3 sentence summary here\",\n  \"tags\": [\"tag1\", \"tag2\", \"tag3\"],\n  \"status\": \"status_here\",\n  \"significance\": 3,\n  \"key_entities\": [\"company1\", \"product2\", \"technology3\"],\n  \"date_processed\": \"{{new Date().toISOString()}}\"\n}\n```\n\nRespond with only the JSON object, no additional text.",
        "batching": {
          "batchSize": 1,
          "delayBetweenBatches": 100
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        -4380,
        220
      ],
      "id": "307861d9-9d44-498b-9db3-26d7531515f8",
      "name": "AI Analysis Chain"
    },
    {
      "parameters": {
        "options": {
          "maxTokens": 300,
          "temperature": 0.2
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -4292,
        440
      ],
      "id": "ecf28464-6ded-4e54-a139-82618316aae3",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "AgnQ41KjU7NganoE",
          "name": "OpenRouter account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "console.log('=== TECH/AI NEWS PROCESSING ===');\nconsole.log('Total items received:', items.length);\n\n// Initialize variables\nlet topicsToMonitor = '';\nlet allArticles = [];\nlet topicsItem = null;\n\n// First, find and extract topics\nfor (let i = 0; i < items.length; i++) {\n  const item = items[i].json;\n  console.log(`\\nChecking item ${i} for topics...`);\n  \n  // Check for Airtable topics structure\n  if (item.fields && item.fields.Topics) {\n    topicsToMonitor = item.fields.Topics;\n    topicsItem = item;\n    console.log('✅ Found topics from Airtable:', topicsToMonitor);\n    break;\n  } else if (item.Topics) {\n    topicsToMonitor = item.Topics;\n    topicsItem = item;\n    console.log('✅ Found topics:', topicsToMonitor);\n    break;\n  } else if (item['Topics to Monitor']) {\n    topicsToMonitor = item['Topics to Monitor'];\n    topicsItem = item;\n    console.log('✅ Found topics (alt field):', topicsToMonitor);\n    break;\n  }\n}\n\n// If no topics found, use tech/AI defaults\nif (!topicsToMonitor) {\n  topicsToMonitor = 'artificial intelligence, machine learning, AI, technology, startup, software, programming, data science, blockchain, cryptocurrency, fintech, cybersecurity, cloud computing, mobile apps, web development, robotics, automation, innovation';\n  console.log('⚠️ No topics found - using tech/AI defaults:', topicsToMonitor);\n}\n\n// Convert topics to array for matching\nconst topicsArray = topicsToMonitor.toLowerCase()\n  .split(/[,;|\\n]/)\n  .map(t => t.trim())\n  .filter(t => t.length > 0);\n\nconsole.log('Topics array:', topicsArray);\n\n// Filter out repair/maintenance content\nconst excludeKeywords = ['repair', 'maintenance', 'fix', 'troubleshoot', 'diagnostic', 'automotive', 'construction', 'equipment', 'parts', 'service', 'mechanic'];\n\n// Now process all articles\nlet articlesProcessed = 0;\nlet articlesMatched = 0;\nlet articlesFiltered = 0;\n\nfor (let i = 0; i < items.length; i++) {\n  const item = items[i].json;\n  \n  // Skip if this is the topics item\n  if (item === topicsItem) {\n    console.log(`Skipping item ${i} - it's the topics item`);\n    continue;\n  }\n  \n  // Check if this item contains articles\n  // Handle different RSS feed formats\n  if (typeof item === 'object' && !Array.isArray(item)) {\n    // Check for numbered keys (API format)\n    const keys = Object.keys(item);\n    const numberedKeys = keys.filter(key => !isNaN(parseInt(key)));\n    \n    if (numberedKeys.length > 0) {\n      console.log(`\\nProcessing item ${i} with ${numberedKeys.length} articles (numbered format)`);\n      \n      numberedKeys.forEach(key => {\n        const article = item[key];\n        if (article && typeof article === 'object' && article.title) {\n          articlesProcessed++;\n          processArticle(article, `${i}-${key}`);\n        }\n      });\n    } else if (item.items && Array.isArray(item.items)) {\n      // Standard RSS format\n      console.log(`\\nProcessing item ${i} with ${item.items.length} articles (items array)`);\n      \n      item.items.forEach((article, idx) => {\n        articlesProcessed++;\n        processArticle(article, `${i}-${idx}`);\n      });\n    } else if (item.channel?.item) {\n      // Another RSS format\n      const articles = Array.isArray(item.channel.item) ? item.channel.item : [item.channel.item];\n      console.log(`\\nProcessing item ${i} with ${articles.length} articles (channel.item)`);\n      \n      articles.forEach((article, idx) => {\n        articlesProcessed++;\n        processArticle(article, `${i}-${idx}`);\n      });\n    } else if (item.title && item.description) {\n      // Single article\n      console.log(`\\nProcessing item ${i} as single article`);\n      articlesProcessed++;\n      processArticle(item, i);\n    }\n  }\n}\n\nfunction processArticle(article, index) {\n  // Extract fields\n  const title = (article.title || article.headline || '').toString().trim();\n  const description = (article.description || article.summary || article.content || '').toString().trim();\n  const url = (article.url || article.link || article.guid || '').toString().trim();\n  const source = (article.source?.name || article.source || 'Unknown').toString().trim();\n  \n  if (!title || !description) {\n    console.log(`  - Article ${index}: No title/description, skipping`);\n    return;\n  }\n  \n  // Check for repair/maintenance content and filter out\n  const fullText = `${title} ${description}`.toLowerCase();\n  let hasExcludedContent = false;\n  \n  excludeKeywords.forEach(keyword => {\n    if (fullText.includes(keyword)) {\n      hasExcludedContent = true;\n    }\n  });\n  \n  if (hasExcludedContent) {\n    articlesFiltered++;\n    console.log(`  ❌ Article ${index}: \"${title.substring(0, 30)}...\" - FILTERED (repair/maintenance content)`);\n    return;\n  }\n  \n  // Check topic match\n  let matchesTopic = false;\n  let matchedTopics = [];\n  \n  topicsArray.forEach(topic => {\n    if (fullText.includes(topic)) {\n      matchesTopic = true;\n      matchedTopics.push(topic);\n    }\n  });\n  \n  if (matchesTopic) {\n    articlesMatched++;\n    console.log(`  ✅ Article ${index}: \"${title.substring(0, 50)}...\" - MATCHED topics: ${matchedTopics.join(', ')}`);\n    \n    allArticles.push({\n      json: {\n        title: title,\n        description: description,\n        url: url,\n        source: source,\n        published_date: article.publishedAt || article.pubDate || new Date().toISOString(),\n        author: article.author || '',\n        monitored_topics: topicsToMonitor,\n        matched_topics: matchedTopics.join(', ')\n      }\n    });\n  } else {\n    console.log(`  ❌ Article ${index}: \"${title.substring(0, 30)}...\" - no tech/AI topic match`);\n  }\n}\n\nconsole.log('\\n=== SUMMARY ===');\nconsole.log(`Topics monitored: ${topicsToMonitor}`);\nconsole.log(`Total articles processed: ${articlesProcessed}`);\nconsole.log(`Articles filtered out (repair/maintenance): ${articlesFiltered}`);\nconsole.log(`Articles matching tech/AI topics: ${articlesMatched}`);\n\n// Always return something\nif (allArticles.length === 0) {\n  console.log('\\n⚠️ No articles matched! Returning guidance message.');\n  return [{\n    json: {\n      title: 'No Tech/AI Articles Found',\n      description: `None of the ${articlesProcessed} articles matched your tech/AI topics: ${topicsToMonitor}. Consider broadening your topics or checking RSS feed sources.`,\n      url: 'https://example.com',\n      source: 'System Message',\n      published_date: new Date().toISOString(),\n      author: 'Workflow System',\n      monitored_topics: topicsToMonitor,\n      matched_topics: 'none'\n    }\n  }];\n}\n\nreturn allArticles;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4820,
        220
      ],
      "id": "81743a55-88a3-4ccc-a281-b22f420ce373",
      "name": "Tech News Processing",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "app42MWoBdW4bj8Ba",
          "mode": "list",
          "cachedResultName": "News Pipeline Base",
          "cachedResultUrl": "https://airtable.com/app42MWoBdW4bj8Ba"
        },
        "table": {
          "__rl": true,
          "value": "tblil2WC8McQ9MPmQ",
          "mode": "list",
          "cachedResultName": "Articles Table",
          "cachedResultUrl": "https://airtable.com/app42MWoBdW4bj8Ba/tblil2WC8McQ9MPmQ"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Title": "={{ $json.title }} ",
            "Summary": "={{ $json.summary }}",
            "Source": "={{ $json.source }}",
            "Ai Tags": "={{ $json.ai_tags }}",
            "Processed At": "={{ $json.processed_at }}",
            "URL": "={{ $json.url }}",
            "Date Found": "={{ $json.date_found }}",
            "Author": "={{ $json.author }}",
            "Publication Date": "={{ $json.published_date }}",
            "Requires Review": true,
            "Content Type": "Tech/AI News"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Summary",
              "displayName": "Summary",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Source",
              "displayName": "Source",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Content Type",
              "displayName": "Content Type",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        -3780,
        220
      ],
      "id": "02d16590-1158-4e3b-bf77-28588dbad1bf",
      "name": "Airtable_Storage",
      "notesInFlow": false,
      "credentials": {
        "airtableTokenApi": {
          "id": "xkPz2bkNdniT6QGt",
          "name": "Airtable Personal Access Token account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Process the current item\nconst data = $json;\n\nconsole.log('=== PROCESSING AI OUTPUT ===');\n\n// Extract AI response\nlet aiResponse;\ntry {\n  // Handle OpenRouter response structure\n  let responseText = '';\n  \n  if (data.choices && data.choices[0]?.message?.content) {\n    responseText = data.choices[0].message.content;\n  } else if (data.text) {\n    responseText = data.text;\n  } else if (data.response) {\n    responseText = data.response;\n  } else {\n    throw new Error('Could not find AI response');\n  }\n  \n  // Clean JSON\n  responseText = responseText.trim();\n  if (responseText.includes('```json')) {\n    responseText = responseText.replace(/```json\\n?/g, '').replace(/\\n?```/g, '');\n  }\n  \n  const jsonMatch = responseText.match(/\\{[\\s\\S]*\\}/);\n  if (jsonMatch) {\n    responseText = jsonMatch[0];\n  }\n  \n  aiResponse = JSON.parse(responseText);\n  console.log('✅ Parsed AI response');\n  \n} catch (error) {\n  console.log('❌ Parse error:', error.message);\n  \n  aiResponse = {\n    summary: \"AI processing failed\",\n    tags: [\"error\"],\n    status: \"unknown\",\n    significance: 1,\n    key_entities: []\n  };\n}\n\n// Build output\nconst now = new Date();\n\nreturn {\n  json: {\n    // Article data (passed through)\n    title: data.title || 'Untitled',\n    description: data.description || '',\n    url: data.url || '',\n    source: data.source || 'Unknown',\n    author: data.author || '',\n    \n    // AI results\n    summary: aiResponse.summary || 'No summary',\n    ai_tags: Array.isArray(aiResponse.tags) ? aiResponse.tags.join(', ') : '',\n    ai_status: aiResponse.status || 'unknown',\n    ai_significance: Number(aiResponse.significance) || 3,\n    ai_entities: Array.isArray(aiResponse.key_entities) ? aiResponse.key_entities.join(', ') : '',\n    \n    // Topics\n    monitored_topics: data.monitored_topics || '',\n    matched_topics: data.matched_topics || '',\n    \n    // Dates\n    published_date: data.published_date || now.toISOString(),\n    date_found: now.toISOString().split('T')[0],\n    processed_at: now.toISOString(),\n    \n    // Flags\n    requires_review: aiResponse.significance >= 4 || aiResponse.status === 'unknown',\n    content_type: 'Tech/AI News'\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4004,
        220
      ],
      "id": "e34cdd0c-08e0-4b35-b9ba-70b0e147842e",
      "name": "AI Response Processing"
    },
    {
      "parameters": {
        "content": "TECH & AI NEWS TRACKER\n\nThis workflow monitors premium technology and AI news sources daily at 8:01 AM.\n\nNEW RSS SOURCES:\n✓ TechCrunch - Startup & tech news\n✓ The Verge - Technology culture\n✓ Ars Technica - Deep tech analysis\n✓ VentureBeat - Tech business\n✓ OpenAI Blog - Official AI updates\n✓ Google AI - Research & products\n✓ Anthropic - AI safety & research\n✓ Hugging Face - Open source AI\n✓ Hacker News - Developer community\n✓ MIT Tech Review - Emerging tech\n✓ Bloomberg Tech - Financial tech news\n\nFILTERS OUT:\n❌ Repair & maintenance content\n❌ Automotive/construction equipment\n❌ Diagnostic/troubleshooting guides\n\nFOCUSES ON:\n✅ AI/ML developments\n✅ Software & tech innovations\n✅ Startup funding & launches\n✅ Research breakthroughs\n✅ Industry analysis\n\nTopics can be updated in Airtable.\nWorkflow processes 12 premium tech sources.",
        "height": 400,
        "width": 500,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3600,
        -200
      ],
      "typeVersion": 1,
      "id": "d1590716-17ad-4200-9702-5903f572eb59",
      "name": "Tech News Info"
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -5040,
        220
      ],
      "id": "35be6b11-1823-46fc-98f0-99bd551201cb",
      "name": "Wait",
      "webhookId": "22dbdb56-526c-4f15-8a19-3e2c80e03161"
    }
  ],
  "pinData": {},
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "TechCrunch_RSS",
            "type": "main",
            "index": 0
          },
          {
            "node": "TheVerge_RSS",
            "type": "main",
            "index": 0
          },
          {
            "node": "ArsTechnica_RSS",
            "type": "main",
            "index": 0
          },
          {
            "node": "VentureBeat_RSS",
            "type": "main",
            "index": 0
          },
          {
            "node": "OpenAI_RSS",
            "type": "main",
            "index": 0
          },
          {
            "node": "GoogleAI_RSS",
            "type": "main",
            "index": 0
          },
          {
            "node": "Anthropic_RSS",
            "type": "main",
            "index": 0
          },
          {
            "node": "HuggingFace_RSS",
            "type": "main",
            "index": 0
          },
          {
            "node": "HackerNews_RSS",
            "type": "main",
            "index": 0
          },
          {
            "node": "MITTechReview_RSS",
            "type": "main",
            "index": 0
          },
          {
            "node": "BloombergTech_RSS",
            "type": "main",
            "index": 0
          },
          {
            "node": "Airtable_Topics",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Airtable_Topics": {
      "main": [
        [
          {
            "node": "Merge Articles",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TechCrunch_RSS": {
      "main": [
        [
          {
            "node": "Merge Articles",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "TheVerge_RSS": {
      "main": [
        [
          {
            "node": "Merge Articles",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "ArsTechnica_RSS": {
      "main": [
        [
          {
            "node": "Merge Articles",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "VentureBeat_RSS": {
      "main": [
        [
          {
            "node": "Merge Articles",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "OpenAI_RSS": {
      "main": [
        [
          {
            "node": "Merge Articles",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "GoogleAI_RSS": {
      "main": [
        [
          {
            "node": "Merge Articles",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Anthropic_RSS": {
      "main": [
        [
          {
            "node": "Merge Articles",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "HuggingFace_RSS": {
      "main": [
        [
          {
            "node": "Merge Articles",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "HackerNews_RSS": {
      "main": [
        [
          {
            "node": "Merge Articles",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "MITTechReview_RSS": {
      "main": [
        [
          {
            "node": "Merge Articles",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "BloombergTech_RSS": {
      "main": [
        [
          {
            "node": "Merge Articles",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge Articles": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Analysis Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Analysis Chain": {
      "main": [
        [
          {
            "node": "AI Response Processing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tech News Processing": {
      "main": [
        [
          {
            "node": "AI Analysis Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Response Processing": {
      "main": [
        [
          {
            "node": "Airtable_Storage",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Airtable_Storage": {
      "main": [
        []
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Tech News Processing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "tech-ai-v2.1.0",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "12f0b111963f9c1d47dd91686370921753fd90a2637cdc21072d52f29ded2849"
  },
  "id": "TechAI_NewsTracker_v2.1",
  "tags": ["tech", "ai", "news", "automation"]
}